if &compatible
  set nocompatible
end

" Remove declared plugins
function! s:UnPlug(plug_name)
  if has_key(g:plugs, a:plug_name)
    call remove(g:plugs, a:plug_name)
  endif
endfunction
command!  -nargs=1 UnPlug call s:UnPlug(<args>)

let g:has_async = v:version >= 800 || has('nvim')

" Shim command and function to allow migration from Vundle to vim-plug.
" function! VundleToPlug(vundle_command, arg, ...)
"   echom "You are using Vundle's `".a:vundle_command."` command to declare plugins. Dotfiles now uses vim-plug for plugin management. Please rename uses of `".a:vundle_command."` to `Plug`. Plugin was '".a:arg."'."
"   let vim_plug_options = {}
"
"   if a:0 > 0
"     if has_key(a:1, 'name')
"       let name = a:1.name
"       let vim_plug_options.dir = "$HOME/.vim/bundle/".a:1.name
"     endif
"
"     if has_key(a:1, 'rtp')
"       let vim_plug_options.rtp = a:1.rtp
"     endif
"   endif
"
"   Plug a:arg, vim_plug_options
" endfunction
"
" com! -nargs=+  -bar Plugin call VundleToPlug("Plugin", <args>)
" com! -nargs=+  -bar Bundle call VundleToPlug("Bundle", <args>)

call plug#begin('~/.vim/bundle')

" Define bundles via Github repos
Plug 'sheerun/vim-polyglot'
Plug 'christoomey/vim-run-interactive'

" If fzf has already been installed via Homebrew, use the existing fzf
" Otherwise, install fzf. The `--all` flag makes fzf accessible outside of vim
if isdirectory("/usr/local/opt/fzf")
  Plug '/usr/local/opt/fzf'
else
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
endif

Plug 'junegunn/fzf.vim'
Plug 'elixir-lang/vim-elixir'
Plug 'fatih/vim-go'
Plug 'janko-m/vim-test'
Plug 'pangloss/vim-javascript'

Plug 'pbrisbin/vim-mkdir'
Plug 'slim-template/vim-slim'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-projectionist'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'          " status bar
Plug 'vim-airline/vim-airline-themes'   " nice colors for status bar
" Plug 'vim-ruby/vim-ruby' #already in polyglot
Plug 'vim-scripts/tComment'
Plug 'christoomey/vim-tmux-navigator'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'kana/vim-textobj-user'
Plug 'nelstrom/vim-textobj-rubyblock'
Plug 'jiangmiao/auto-pairs' "autocomplete brackets etc
Plug 'dhruvasagar/vim-table-mode' "for formatting markdown tables

" Autocomplete module
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/neocomplete.vim'
endif

" Rust syntax
Plug 'rust-lang/rust.vim'

if g:has_async
  Plug 'dense-analysis/ale'
endif

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
